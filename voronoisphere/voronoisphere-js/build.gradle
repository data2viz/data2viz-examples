buildscript {

    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath 'com.moowork.gradle:gradle-node-plugin:1.2.0'
    }
}

apply plugin: 'kotlin-platform-js'

apply plugin: 'com.moowork.node'

node {
//    download true
}

dependencies {
    expectedBy project(":voronoisphere-common")
    compile "io.data2viz:d2v-core-js:$data2viz_version"
    compile "io.data2viz:d2v-color-js:$data2viz_version"
    compile "io.data2viz:d2v-interpolate-js:$data2viz_version"
    compile "io.data2viz:d2v-svg-js:$data2viz_version"
    compile "io.data2viz:d2v-voronoi-js:$data2viz_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-js:$kotlin_version"
}


[compileKotlin2Js, compileTestKotlin2Js]*.configure {
    kotlinOptions {
        sourceMap = true
        sourceMapEmbedSources = "always"
        moduleKind = 'umd'
    }
}

task populateNodeModules(type: Copy, dependsOn: [compileKotlin2Js, compileTestKotlin2Js]) {

    from compileKotlin2Js.destinationDir

    configurations.testCompile.each {
        from zipTree(it.absolutePath).matching {
            include '*.js'
            include '*.js.map'
        }
    }

    into "${buildDir}/node_modules"
}

assemble.dependsOn populateNodeModules

task yarnInstall(type: YarnTask) {
    args = ['install']
}

task runKarma(type: YarnTask, dependsOn: [populateNodeModules, yarnInstall]) {
    args = ['test']
}

test.dependsOn runKarma















if (optimizeDist) {

    apply plugin: 'kotlin-dce-js'

    runDceKotlinJs.keep "voronoisphere-js.start"

    task bundle(type: YarnTask, dependsOn: [yarnInstall,runDceKotlinJs]) {
        args = ['bundle']
    }

    build.dependsOn bundle

}


